package Graphics;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class Rules extends JFrame {
    private JTextArea newRules=new JTextArea("Дано\n" +
            "Мобильный робот движется по плоскости. Робот имеет форму круга радиусом r с координатой центра (Cx, Cy); робот может двигаться в\nлюбом направлении без ограничений, с некоторой заданной постоянной скоростью. \nТакже на плоскости находятся объекты-препятствия.\nЗаданы начальная и конечная координаты робота Init=(Initx, Inity) и Goal=(Goalx, Goaly), дополнительно может быть задано\nнесколько промежуточных координат. \n" +
            "Задача: найти кратчайший (по возможности)путь для робота из начальной координаты в конечную, не приводящий к столкновению\nробота с препятствиями.При наличии дополнительных координат путь должен проходить через каждую дополнительную координату\nминимум по одному разу.\n" +
            "РГЗ включает в себя две части: \n" +
            "реализация алгоритмов разработка GUI-приложения, позволяющего графически продемонстрировать работу реализованных\nалгоритмов в интерактивном режиме" +
            "\nМатематическую часть (алгоритмы) желательно поместить в отдельный подмодуль. Этот подмодуль может использоваться как в GUI-\nприложении, так и, например, в обычном консольном приложении.\n" +
            "Основные возможности, которые должно поддерживать GUI-приложение: отображение сцены: препятствий, робота, начальной,\nконечной и промежуточных (при наличии в задании) точек пути интерактивное задание препятствий, размера робота,положения\nначальной,конечной и промежуточных (при наличии в задании) точек построенного пути или сообщение о том что путь не\nудалось построить.\nПравила\n" +
            "Число промежуточных точек от 0 до 3\n" +
            "Число фигур от 0 до 3\n");
    private JButton back=new JButton("Назад");

    public Rules(){
        super("Правила игры");
        this.setSize(800,800);
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.setResizable(false);
        this.setLocationRelativeTo(null);

        back.setBounds(650,700,100,40);
        back.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                super.mousePressed(e);
                Menu.windowPatch.setVisible(true);
                setVisible(false);
            }
        });

        add(back);

        newRules.setBounds(10,10,765,790);
        add(newRules);

        this.setVisible(true);
    }
}
